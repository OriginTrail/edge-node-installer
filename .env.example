# ======================= ON-SERVER DEPLOYMENT PARAMETERS =======================
REMOTE_USER=
REMOTE_HOST=

# OPTIONS: development / production 
DEPLOYMENT_MODE=development
# development mode installs all services without enabling or starting them automatically, while  
# production mode enables and starts all services once the installation is completed. 

DB_USERNAME=root
DB_PASSWORD=otnodedb
# If you are running an installer on a fresh instance, this password will be set for the root user. 


# =========================== BLOCKCHAIN PARAMETERS ============================
BLOCKCHAIN_ENVIRONMENT=testnet
# Choose between “mainnet” or “testnet”.

DEFAULT_PUBLISH_BLOCKCHAIN=neuroweb
# Blockchain which will be used for publishing Knowledge Assets. 
# OPTIONS: neuroweb, base or gnosis

PUBLISH_WALLET_01_PUBLIC_KEY=
PUBLISH_WALLET_01_PRIVATE_KEY=
PUBLISH_WALLET_02_PUBLIC_KEY=
PUBLISH_WALLET_02_PRIVATE_KEY=
PUBLISH_WALLET_03_PUBLIC_KEY=
PUBLISH_WALLET_03_PRIVATE_KEY=
# Provide up to 3 keys which will be used for publishing Knowledge Assets to 
# the default blockchain you defined in DEFAULT_PUBLISH_BLOCKCHAIN. 
# Keys provided here require both TRAC and the utility token of the chosen blockchain (e.g., for Base, TRAC and ETH). 


# =========================== NODE ENGINE PARAMETERS ============================
# Parameters in this section are related to your node engine configuration where you can 
# set up your node’s name for each supported blockchain, as well as management and operational keys (wallets).

# Management (Admin) key will allow you to configure ASK, Operator fee, and other parameters.
# The operational key is used by the node to run certain blockchain operations.
# These wallets WILL NOT be used for publishing operations.   

# NEUROWEB:
NEUROWEB_NODE_NAME=
NEUROWEB_OPERATOR_FEE=0
NEUROWEB_MANAGEMENT_KEY_PUBLIC_ADDRESS=
NEUROWEB_OPERATIONAL_KEY_PUBLIC_ADDRESS=
NEUROWEB_OPERATIONAL_KEY_PRIVATE_ADDRESS=
# Note: Neuroweb Management and Operational keys (wallets) require a small amount of NEURO in order to be functional. 

# BASE:
BASE_NODE_NAME=
BASE_OPERATOR_FEE=
BASE_RPC_ENDPOINT=https://base-sepolia-rpc.publicnode.com
BASE_MANAGEMENT_KEY_PUBLIC_ADDRESS=
BASE_OPERATIONAL_KEY_PUBLIC_ADDRESS=
BASE_OPERATIONAL_KEY_PRIVATE_ADDRESS=
# Note: Base Management and Operational keys (wallets) require a small amount of ETH in order to be functional. 

# GNOSIS:
GNOSIS_NODE_NAME=
GNOSIS_OPERATOR_FEE=0
GNOSIS_RPC_ENDPOINT=https://rpc.chiado.gnosis.gateway.fm
GNOSIS_MANAGEMENT_KEY_PUBLIC_ADDRESS=
GNOSIS_OPERATIONAL_KEY_PUBLIC_ADDRESS=
GNOSIS_OPERATIONAL_KEY_PRIVATE_ADDRESS=
# Note: Gnosis Management and Operational keys (wallets) require a small amount of xDAI in order to be functional.


# ======================== EDGE NODE SERVICES PARAMETERS ========================
EDGE_NODE_MODE=public

# Your forked private Edge Node service repository URLs can be added below for the installer to clone and deploy them.
EDGE_NODE_KNOWLEDGE_MINING_REPO=
EDGE_NODE_DRAG_REPO=
EDGE_NODE_API_REPO=
EDGE_NODE_UI_REPO=
EDGE_NODE_AUTH_SERVICE_REPO=

# GITHUB CREDENTIALS:
REPOSITORY_USER=
REPOSITORY_AUTH=
# If you want to deploy your private GitHub repositories, provide your GitHub username and token
# for the installer to be able to clone and install your custom Edge Node services.

# =================== EDGE NODE EXTERNAL SERVICES AND TOOLS ====================
# Some Edge Node components rely on LLMs to function properly. To ensure 
# full functionality, at least one of the following external services is
# required - OPEN_AI_KEY  or ANTHROPIC_API_KEY
 
# OpenAI - used by default (https://platform.openai.com/api-keys)
OPENAI_API_KEY=

# Anthropic - can be obtained at https://console.anthropic.com/account/keys
ANTHROPIC_API_KEY=""

# Unstructured.io - can be obtained from https://unstructured.io/api-key-free (used by default for parsing PDF documents)
UNSTRUCTURED_API_URL=""

# HuggingFace - can be obtained from https://huggingface.co/settings/tokens (used if you use vector search in your dRAG pipeline)
HUGGINGFACE_API_KEY=""

# Milvus (vector database) - Can be obtained from https://cloud.zilliz.com/ (used if using vector search for the dRAG pipeline)
MILVUS_USERNAME=""
MILVUS_PASSWORD=""
MILVUS_URI=""


# ======================= [HTTPS] DEPLOY SSL FOR YOUR EDGE NODE =======================
# If you wish to configure SSL certificates for your Edge Node, switch this to true.
# Instructions on how to set up SSL can be found here: <ADD_LINK_TO_DOCS>
EDGE_NODE_SSL_ENABLED=false
EDGE_NODE_DOMAIN=
