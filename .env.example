# EDGE NODE SETUP ====================================================================

# EDGE_NODE_MODE is only related to local environment setup and can be
# public (connecting with already deployed Engine node) or
# local (connecting wih 1st node in local network)
# for server deployment, this EDGE_NODE_MODE can remain the same, it will not be used
EDGE_NODE_MODE=public
EDGE_NODE_KNOWLEDGE_MINING_REPO=
EDGE_NODE_DRAG_REPO=
EDGE_NODE_API_REPO=
EDGE_NODE_UI_REPO=
EDGE_NODE_AUTH_SERVICE_REPO=

# If you want to use a private repository, provide a username or password. 
# Alternatively, the installation process will ask you for these interactively
REPOSITORY_USER=
# This is the user token when using Github. Can be treated as a password if the service supports
# password authentication
REPOSITORY_AUTH=

# Can be obtained from https://platform.openai.com/api-keys
# OpenAI is used by default
OPENAI_API_KEY=

# Controls whether Secure Sockets Layer is enabled
# if you're using IP it can be false, and if you set up a HTTPS domain it should be true
EDGE_NODE_SSL_ENABLED=false
EDGE_NODE_DOMAIN=
# Can be obtained from https://huggingface.co/settings/tokens
# only used if you use vector search in your dRAG pipeline
HUGGINGFACE_API_KEY=""
# Can be obtained from https://unstructured.io/api-key-free
UNSTRUCTURED_API_URL=""
# Can be obtained https://console.anthropic.com/account/keys
ANTHROPIC_API_KEY=""
# Params for the Milvus vector DB
# Can be obtained from https://cloud.zilliz.com/
# used if using vector search for the dRAG pipeline
MILVUS_USERNAME=""
MILVUS_PASSWORD=""
MILVUS_URI=""


# If set to production, also installs system startup services.
# !IMPORTANT: Only supports Systemctl for now
# OPTIONS: development / production 
DEPLOYMENT_MODE=development

#### PARAMS RELATED TO ON-SERVER DEPLOYMENT ====================================================================
REMOTE_USER=
REMOTE_HOST=

# MYSQL
DB_USERNAME=root
DB_PASSWORD=otnodedb

DB_ROOT_PASSWORD=root

# ENGINE NODE
# BLOCKCHAIN_ENVIRONMENT can be mainnet or testnet
BLOCKCHAIN_ENVIRONMENT=testnet

DEFAULT_PUBLISH_BLOCKCHAIN=neuroweb
# Description: Blockchain which will be used for publishing of Knowledge Assets. 
# OPTIONS: neuroweb, base or gnosis

PUBLISH_WALLET_01_PUBLIC_KEY=
PUBLISH_WALLET_01_PRIVATE_KEY=
PUBLISH_WALLET_02_PUBLIC_KEY=
PUBLISH_WALLET_02_PRIVATE_KEY=
PUBLISH_WALLET_03_PUBLIC_KEY=
PUBLISH_WALLET_03_PRIVATE_KEY=
# Description: Provide up to 3 keys which will be used for publishings of Knowledge Assets to # the default blockchain you choose (DEFAULT_PUBLISH_BLOCKCHAIN). Keys provided here require # both TRAC and utility token of the chosen blockchain (ex. For Base, TRAC and ETH) 


# NEUROWEB
NEUROWEB_NODE_NAME=
NEUROWEB_OPERATOR_FEE=0
NEUROWEB_MANAGEMENT_KEY_PUBLIC_ADDRESS=
# This wallet must have TRAC and gas funds inside it
NEUROWEB_OPERATIONAL_KEY_PUBLIC_ADDRESS=
NEUROWEB_OPERATIONAL_KEY_PRIVATE_ADDRESS=

# BASE
BASE_NODE_NAME=
BASE_OPERATOR_FEE=
BASE_RPC_ENDPOINT=https://base-sepolia-rpc.publicnode.com
BASE_MANAGEMENT_KEY_PUBLIC_ADDRESS=
# This wallet must have TRAC and gas funds inside it
BASE_OPERATIONAL_KEY_PUBLIC_ADDRESS=
BASE_OPERATIONAL_KEY_PRIVATE_ADDRESS=

# GNOSIS
GNOSIS_NODE_NAME=
GNOSIS_OPERATOR_FEE=0
GNOSIS_RPC_ENDPOINT=https://rpc.chiado.gnosis.gateway.fm
GNOSIS_MANAGEMENT_KEY_PUBLIC_ADDRESS=
# This wallet must have TRAC and gas funds inside it
GNOSIS_OPERATIONAL_KEY_PUBLIC_ADDRESS=
GNOSIS_OPERATIONAL_KEY_PRIVATE_ADDRESS=